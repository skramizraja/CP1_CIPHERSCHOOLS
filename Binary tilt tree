/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    int sumtree(TreeNode* root)
    {
       // int sum=0;
        if(root==NULL)
            return 0;
   /*     if(root->left==NULL && root->right==NULL)
        {
            return  sum+root->val;
        }*/
        
        int sum=root->val+sumtree(root->left)+sumtree(root->right);
        cout<<sum<<" ";
        return sum;
    }
    int findTilt(TreeNode* root) {
        if(root==NULL)
            return 0;
        if(root->left==NULL && root->right==NULL)
            return 0;
        int x=abs(sumtree(root->left)-sumtree(root->right)); 
        cout<<x<<" ";
        x=x+findTilt(root->left)+findTilt(root->right);
        return x;
    }
};
