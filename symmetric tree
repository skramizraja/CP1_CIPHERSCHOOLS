/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    void helper2(TreeNode* root,vector<int> &v,int d)
    {
        if(root==NULL)
            return ;
        
        v.push_back(root->val+d);
        helper2(root->left,v,d+1);
        helper2(root->right,v,d-1);
        
    }
    void helper1(TreeNode* root,vector<int> &v,int d)
    {
        if(root==NULL)
            return ;
        
        v.push_back(root->val+d);
        helper1(root->right,v,d+1);
        helper1(root->left,v,d-1);
    
        
    }
    bool isSymmetric(TreeNode* root) {
        if(root==NULL)
            return true;
       vector<int> left_t,right_t;
        int d=1;
        helper1(root->left,left_t,d);
        helper2(root->right,right_t,d);
        
        if(left_t==right_t)
            return true;
        else
            return false;
        
    }
};
